# Builder stage
FROM python:3.13-slim AS builder
ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libxext6 libopencv-dev git libgdal-dev cmake make ninja-build gcc g++ curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /builder

# Copy project configuration
COPY pyproject.toml .
COPY inference inference/

COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
RUN uv sync --compile-bytecode

# Install all dependencies using UV
# Using separate commands to better utilize layer caching
RUN uv pip install --upgrade pip && \
    uv pip install . && \
    uv pip install .[clip,container,cpu,doctr,gaze,groundingdino,http,sam,transformers,waf,yolo_world]

# Build wheels
COPY . /builder
RUN make create_wheels

# Final stage
FROM python:3.13-slim
ARG TARGETPLATFORM
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libxext6 libopencv-dev git libgdal-dev cmake make ninja-build gcc g++ curl \
    && rm -rf /var/lib/apt/lists/*

COPY --from=ghcr.io/astral-sh/uv:0.5.18 /uv /uvx /bin/

# Copy and install wheels
COPY --from=builder /builder/dist /tmp/dist
RUN uv pip install --upgrade pip && \
    uv pip install \
    /tmp/dist/inference_cli*.whl \
    /tmp/dist/inference_core*.whl \
    /tmp/dist/inference_cpu*.whl \
    /tmp/dist/inference_sdk*.whl && \
    if [ "${TARGETPLATFORM}" = "linux/amd64" ]; then \
    uv pip install .[vino]; \
    fi

WORKDIR /app
COPY docker/config/cpu_http.py cpu_http.py

ENV API_LOGGING_ENABLED=True \
    CORE_MODEL_OWLV2_ENABLED=True \
    CORE_MODEL_SAM2_ENABLED=True \
    ENABLE_PROMETHEUS=True \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    HOST=0.0.0.0 \
    NUM_WORKERS=1 \
    PORT=9001 \
    PROJECT=roboflow-platform \
    VERSION_CHECK_MODE=continuous \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    WORKFLOWS_STEP_EXECUTION_MODE=local

ENTRYPOINT ["uvicorn", "cpu_http:app", "--workers", "1", "--host", "0.0.0.0", "--port", "9001"]
